struct SWalHead {
  int8_t   msgType;
  int8_t   sver;
  int8_t   reserved[2];
  int32_t  len;
  uint64_t version;
  uint32_t signature;
  uint32_t cksum;
//SSubmitMsg
//SMsgHead
  int32_t  contLen;
  int32_t  vgId;
  int32_t  length;
  int32_t  numOfBlocks;
//SSubmitBlk
  uint64_t uid;
  int32_t  tid;
  int32_t  padding;
  int32_t  sversion;
  int32_t  dataLen;
  int32_t  schemaLen;
  int16_t  numOfRows;
  char     data[];
};

struct SWal{
  uint64_t version;
  int64_t  fileId;
  int64_t  rid;
  int64_t  tfd;
  int32_t  vgId;
  int32_t  keep;
  int32_t  level;
  int32_t  fsyncPeriod;
  int32_t  fsyncSeq;
  int8_t   stop;
  int8_t   reserved[3];
};


u:/usr/bin/taosd:walWrite{

time("%H:%M:%S ");
$vid=((struct SWal *) arg0)->vgId;
$shead=(struct SWalHead *) arg1;
$len=$shead->len;
$mt=$shead->msgType;

//printf("vgId: %d msgType:%d length:%d  \n", $vid,$mt,$len);
printf("vgId: %d uid: %llx tid: %x rows: %x \n",$shead->vgId,$shead->uid,$shead->tid,$shead->numOfRows);
}